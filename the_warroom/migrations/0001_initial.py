# Generated by Django 5.1.2 on 2024-12-07 05:36

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('the_gatehouse', '0001_initial'),
        ('the_keep', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Async', 'Async'), ('Live', 'Live')], default='Live', max_length=5)),
                ('platform', models.CharField(choices=[('Tabletop Simulator', 'Tts'), ('Root Digital', 'Dwd'), ('In Person', 'Irl')], default='Tabletop Simulator', max_length=20)),
                ('league', models.BooleanField(default=False)),
                ('link', models.CharField(blank=True, max_length=300, null=True)),
                ('random_clearing', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('deck', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='games', to='the_keep.deck')),
                ('hirelings', models.ManyToManyField(blank=True, related_name='games', to='the_keep.hireling')),
                ('landmarks', models.ManyToManyField(blank=True, related_name='games', to='the_keep.landmark')),
                ('map', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='games', to='the_keep.map')),
                ('recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games_recorded', to='the_gatehouse.profile')),
                ('undrafted_faction', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='undrafted_games', to='the_keep.faction')),
                ('undrafted_vagabond', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='undrafted_games', to='the_keep.vagabond')),
            ],
            options={
                'ordering': ['-date_posted'],
            },
        ),
        migrations.CreateModel(
            name='Effort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('dominance', models.CharField(blank=True, choices=[('Mouse', 'Mouse'), ('Fox', 'Fox'), ('Rabbit', 'Rabbit'), ('Bird', 'Bird'), ('Dark', 'Dark')], max_length=10, null=True)),
                ('clockwork', models.BooleanField(default=False)),
                ('win', models.BooleanField(default=False)),
                ('score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('faction_status', models.CharField(blank=True, max_length=50, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('captains', models.ManyToManyField(blank=True, related_name='efforts_as_captain', to='the_keep.vagabond')),
                ('coalition_with', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='efforts_in_coalition', to='the_keep.faction')),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='efforts', to='the_keep.faction')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='efforts', to='the_gatehouse.profile')),
                ('vagabond', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='efforts', to='the_keep.vagabond')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='efforts', to='the_warroom.game')),
            ],
            options={
                'ordering': ['game', 'seat'],
            },
        ),
        migrations.CreateModel(
            name='GameBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='the_warroom.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='the_gatehouse.profile')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='bookmarks',
            field=models.ManyToManyField(related_name='bookmarkedgames', through='the_warroom.GameBookmark', to='the_gatehouse.profile'),
        ),
        migrations.CreateModel(
            name='ScoreCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('effort', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='the_warroom.effort')),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorecards', to='the_keep.faction')),
                ('recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='the_gatehouse.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('participants', models.ManyToManyField(blank=True, to='the_gatehouse.profile')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='tournament',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='the_warroom.tournament'),
        ),
        migrations.CreateModel(
            name='TurnScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_number', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)])),
                ('battle_points', models.IntegerField(default=0)),
                ('crafting_points', models.IntegerField(default=0)),
                ('faction_points', models.IntegerField(default=0)),
                ('other_points', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('scorecard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='turns', to='the_warroom.scorecard')),
            ],
            options={
                'ordering': ['scorecard', 'turn_number'],
                'unique_together': {('scorecard', 'turn_number')},
            },
        ),
    ]
